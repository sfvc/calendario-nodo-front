on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run_pull:
    name: run pull
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Vault CLI
        run: |
          curl -fsSL https://releases.hashicorp.com/vault/1.15.0/vault_1.15.0_linux_amd64.zip -o vault.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault --version

      - name: Set Vault environment variables
        run: |
          echo "VAULT_ADDR=${{ secrets.VAULT_ADDR }}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{ secrets.VAULT_ROOT_TOKEN }}" >> $GITHUB_ENV

      - name: Authenticate to Vault with Root Token
        run: |
          vault login ${{ secrets.VAULT_ROOT_TOKEN }}

      - name: Read secret from Vault VARIABLES DEL PARA EL HOST (e.g., /kv/sistemas3)
        id: read_secret
        run: |
          echo "::add-mask::$(vault kv get -mount=kv -field=host sistemas3)"
          echo "::add-mask::$(vault kv get -mount=kv -field=port sistemas3)"
          echo "::add-mask::$(vault kv get -mount=kv -field=user sistemas3)"
          echo "::add-mask::$(vault kv get -mount=kv -field=pass sistemas3)"

          echo "host=$(vault kv get -mount=kv -field=host sistemas3)" >> $GITHUB_OUTPUT
          echo "port=$(vault kv get -mount=kv -field=port sistemas3)" >> $GITHUB_OUTPUT
          echo "user=$(vault kv get -mount=kv -field=user sistemas3)" >> $GITHUB_OUTPUT
          echo "pass=$(vault kv get -mount=kv -field=pass sistemas3)" >> $GITHUB_OUTPUT
        
      - name: Ejecutar comandos remotos por SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
            host: ${{ steps.read_secret.outputs.host }}
            username: ${{ steps.read_secret.outputs.user }}
            password: ${{ steps.read_secret.outputs.pass }}
            port: ${{ steps.read_secret.outputs.port }}
            script: |
              echo "Downloading repository..."              
              # Obtener nombre del repositorio (sin el owner)
              echo "GITHUB_REPOSITORY=git@github.com:${{ github.repository }}.git"  
              REPO_NAME=$(basename "${{ github.repository }}")   
              echo "REPO_NAME=${REPO_NAME}"        
              if [ ! -d "/home/${REPO_NAME}" ]; then
                cd /home
                git clone git@github.com:${{ github.repository }}.git
              fi        
              cd /home/${REPO_NAME}
              git checkout main
              git pull
              echo "Repository downloaded successfully."            
              docker stop front_asistencia_nodo || true
              docker rm front_asistencia_nodo || true
              docker rmi municipalidad/front_asistencia_nodo:latest || true
              docker build -t municipalidad/front_asistencia_nodo:latest .
              docker run -d --restart=always -p 0.0.0.0:3001:80 \
                -e VITE_API_URL='${{ secrets.VITE_API_URL }}' \          
                --name front_asistencia_nodo municipalidad/front_asistencia_nodo:latest
              docker logs front_asistencia_nodo
              exit